# Name: Carlin Mitchell
# Assignment: MitchellCIS261WK10SQL
# Date: 19NOV2024

import sqlite3

# Connect to (or create) the database
conn = sqlite3.connect("database.db")
cursor = conn.cursor()

# Task 1: Create the "phone" table
def create_table():
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS phone (
            phone_id INT PRIMARY KEY,
            country_code INT NOT NULL,
            phone_number INT NOT NULL,
            phone_type VARCHAR(12)
        )
    """)
    print("Table created.")

# Task 2: Select rows based on `country_code = "US"`
def select_phone_numbers():
    cursor.execute("""
        SELECT phone_number
        FROM phone
        WHERE country_code = ?
    """, ("US",))  # Replace "US" with the corresponding integer for your schema
    rows = cursor.fetchall()
    print("Phone Numbers with country_code = 'US':", rows)

# Task 3: Update rows where `phone_type = "CELLULAR"` to `phone_type = "MOBILE"`
def update_phone_type():
    cursor.execute("""
        UPDATE phone
        SET phone_type = ?
        WHERE phone_type = ?
    """, ("MOBILE", "CELLULAR"))
    conn.commit()
    print("Updated phone_type from 'CELLULAR' to 'MOBILE'.")

# Task 4: Delete rows where `country_code = "XX"`
def delete_rows():
    cursor.execute("""
        DELETE FROM phone
        WHERE country_code = ?
    """, ("XX",))  # Replace "XX" with the appropriate integer for your schema
    conn.commit()
    print("Deleted rows with country_code = 'XX'.")

# Task 5: Drop the "phone" table
def drop_table():
    cursor.execute("DROP TABLE IF EXISTS phone")
    print("Table dropped.")

# Example to demonstrate the functionality
if __name__ == "__main__":
    # Create the table
    create_table()
    
    # Insert sample data for testing
    cursor.executemany("""
        INSERT INTO phone (phone_id, country_code, phone_number, phone_type)
        VALUES (?, ?, ?, ?)
    """, [
        (1, "US", 1234567890, "CELLULAR"),
        (2, "XX", 9876543210, "HOME"),
        (3, "US", 1112223333, "WORK"),
    ])
    conn.commit()
    
    # Perform the required operations
    select_phone_numbers()  # Task 2: Select phone numbers
    update_phone_type()     # Task 3: Update phone type
    delete_rows()           # Task 4: Delete rows
    drop_table()            # Task 5: Drop the table

# Close the database connection
conn.close()
